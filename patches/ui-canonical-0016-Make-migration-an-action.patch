From bf55a083a85f5e35ea919d2ff41d94a28785f9be Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Graber?= <stgraber@stgraber.org>
Date: Tue, 26 Nov 2024 22:09:00 +0000
Subject: [PATCH 16/23] Make migration an action
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: St√©phane Graber <stgraber@stgraber.org>
---
 src/api/instances.tsx                         |  6 ++---
 src/pages/instances/InstanceDetailActions.tsx |  7 ------
 .../actions/InstanceStateActions.tsx          | 23 ++++++++++++++-----
 .../instances/actions/MigrateInstanceBtn.tsx  | 13 +++++------
 src/sass/styles.scss                          |  2 +-
 src/util/instanceMigration.tsx                |  2 +-
 src/util/instanceTable.tsx                    |  2 +-
 7 files changed, 29 insertions(+), 26 deletions(-)

diff --git a/src/api/instances.tsx b/src/api/instances.tsx
index 0664c59..ca51066 100644
--- a/src/api/instances.tsx
+++ b/src/api/instances.tsx
@@ -89,12 +89,11 @@ export const renameInstance = (
 };
 
 export const migrateInstance = (
-  name: string,
-  project: string,
+  instance: LxdInstance,
   target?: string,
   pool?: string,
 ): Promise<LxdOperationResponse> => {
-  let url = `/1.0/instances/${name}?project=${project}`;
+  let url = `/1.0/instances/${instance.name}?project=${instance.project}`;
   if (target) {
     url += `&target=${target}`;
   }
@@ -104,6 +103,7 @@ export const migrateInstance = (
       method: "POST",
       body: JSON.stringify({
         migration: true,
+        live: instance.type === "virtual-machine" && instance.status === "Running",
         pool,
       }),
     })
diff --git a/src/pages/instances/InstanceDetailActions.tsx b/src/pages/instances/InstanceDetailActions.tsx
index 506c923..5082100 100644
--- a/src/pages/instances/InstanceDetailActions.tsx
+++ b/src/pages/instances/InstanceDetailActions.tsx
@@ -1,7 +1,6 @@
 import { FC, cloneElement, useState } from "react";
 import DeleteInstanceBtn from "./actions/DeleteInstanceBtn";
 import { LxdInstance } from "types/instance";
-import MigrateInstanceBtn from "./actions/MigrateInstanceBtn";
 import CreateImageFromInstanceBtn from "./actions/CreateImageFromInstanceBtn";
 import DuplicateInstanceBtn from "./actions/DuplicateInstanceBtn";
 import { ContextualMenu } from "@canonical/react-components";
@@ -24,12 +23,6 @@ const InstanceDetailActions: FC<Props> = ({ instance, project, isLoading }) => {
     : "p-segmented-control__button";
 
   const menuElements = [
-    <MigrateInstanceBtn
-      key="migrate"
-      instance={instance}
-      project={project}
-      classname={classname}
-    />,
     <CreateImageFromInstanceBtn
       key="publish"
       instance={instance}
diff --git a/src/pages/instances/actions/InstanceStateActions.tsx b/src/pages/instances/actions/InstanceStateActions.tsx
index 86503b8..043177f 100644
--- a/src/pages/instances/actions/InstanceStateActions.tsx
+++ b/src/pages/instances/actions/InstanceStateActions.tsx
@@ -4,8 +4,11 @@ import StartInstanceBtn from "pages/instances/actions/StartInstanceBtn";
 import StopInstanceBtn from "pages/instances/actions/StopInstanceBtn";
 import FreezeInstanceBtn from "pages/instances/actions/FreezeInstanceBtn";
 import RestartInstanceBtn from "pages/instances/actions/RestartInstanceBtn";
+import MigrateInstanceBtn from "pages/instances/actions/MigrateInstanceBtn";
 import classnames from "classnames";
 import { List } from "@canonical/react-components";
+import { useSettings } from "context/useSettings";
+import { isClusteredServer } from "util/settings";
 
 interface Props {
   instance: LxdInstance;
@@ -13,16 +16,24 @@ interface Props {
 }
 
 const InstanceStateActions: FC<Props> = ({ instance, className }) => {
+  const { data: settings } = useSettings();
+  const isClustered = isClusteredServer(settings);
+  const items = [
+    <StartInstanceBtn key="start" instance={instance} />,
+    <RestartInstanceBtn key="restart" instance={instance} />,
+    <FreezeInstanceBtn key="freeze" instance={instance} />,
+    <StopInstanceBtn key="stop" instance={instance} />,
+  ];
+
+  if (isClustered) {
+    items.push(<MigrateInstanceBtn key="migrate" instance={instance} />)
+  }
+
   return (
     <List
       inline
       className={classnames(className, "actions-list")}
-      items={[
-        <StartInstanceBtn key="start" instance={instance} />,
-        <RestartInstanceBtn key="restart" instance={instance} />,
-        <FreezeInstanceBtn key="freeze" instance={instance} />,
-        <StopInstanceBtn key="stop" instance={instance} />,
-      ]}
+      items={items}
     />
   );
 };
diff --git a/src/pages/instances/actions/MigrateInstanceBtn.tsx b/src/pages/instances/actions/MigrateInstanceBtn.tsx
index e20b4b7..bc47813 100644
--- a/src/pages/instances/actions/MigrateInstanceBtn.tsx
+++ b/src/pages/instances/actions/MigrateInstanceBtn.tsx
@@ -1,5 +1,5 @@
 import { FC } from "react";
-import { ActionButton, Icon } from "@canonical/react-components";
+import { Button, Icon } from "@canonical/react-components";
 import usePortal from "react-useportal";
 import { LxdInstance } from "types/instance";
 import { useInstanceLoading } from "context/instanceLoading";
@@ -29,17 +29,16 @@ const MigrateInstanceBtn: FC<Props> = ({ instance, classname }) => {
           <MigrateInstanceModal close={closePortal} instance={instance} />
         </Portal>
       )}
-      <ActionButton
-        onClick={openPortal}
-        type="button"
-        className={classNames("u-no-margin--bottom has-icon", classname)}
+      <Button
+        appearance="base"
         loading={isLoading}
+        className="has-icon is-dense"
+        onClick={openPortal}
         disabled={isDisabled}
         title="Migrate instance"
       >
         <Icon name="machines" />
-        <span>Migrate</span>
-      </ActionButton>
+      </Button>
     </>
   );
 };
diff --git a/src/sass/styles.scss b/src/sass/styles.scss
index 4018c20..b540458 100644
--- a/src/sass/styles.scss
+++ b/src/sass/styles.scss
@@ -183,7 +183,7 @@ body {
 
 .actions-list {
   display: inline-block;
-  min-width: 8.5rem;
+  min-width: 6.5rem;
 
   .p-inline-list__item {
     margin-right: 0;
diff --git a/src/util/instanceMigration.tsx b/src/util/instanceMigration.tsx
index c810ed5..bc755b7 100644
--- a/src/util/instanceMigration.tsx
+++ b/src/util/instanceMigration.tsx
@@ -96,7 +96,7 @@ export const useInstanceMigration = ({
     instanceLoading.setLoading(instance, "Migrating");
     const targetMember = type === "cluster member" ? target : undefined;
     const targetPool = type === "root storage pool" ? target : undefined;
-    migrateInstance(instance.name, instance.project, targetMember, targetPool)
+    migrateInstance(instance, targetMember, targetPool)
       .then((operation) => {
         eventQueue.set(
           operation.metadata.id,
diff --git a/src/util/instanceTable.tsx b/src/util/instanceTable.tsx
index cc982bc..a86eadc 100644
--- a/src/util/instanceTable.tsx
+++ b/src/util/instanceTable.tsx
@@ -17,7 +17,7 @@ export const COLUMN_WIDTHS: Record<string, number> = {
   [IPV6]: 330,
   [SNAPSHOTS]: 110,
   [STATUS]: 160,
-  [ACTIONS]: 210,
+  [ACTIONS]: 240,
 };
 
 export const SIZE_HIDEABLE_COLUMNS = [
-- 
2.34.1

